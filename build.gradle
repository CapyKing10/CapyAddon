plugins {
    id "fabric-loom" version "1.7-SNAPSHOT"
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/capyaddon.accesswidener")
}

repositories {
    mavenCentral()
    maven {
        name = "Meteor Dev Releases"
        url = "https://maven.meteordev.org/releases"
    }
    maven {
        name = "Meteor Dev Snapshots"
        url = "https://maven.meteordev.org/snapshots"
    }
    maven {
        url 'https://m2.dv8tion.net/releases'
    }
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    // Fabric
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Meteor
    modImplementation "meteordevelopment:meteor-client:${project.meteor_version}"

    // Baritone
    modImplementation("meteordevelopment:baritone:$project.minecraft_version-SNAPSHOT")

    implementation 'org.jsoup:jsoup:1.16.1'

    modImplementation 'com.github.sakura-ryoko:litematica:1.21-0.19.59-sakura.2'
    //modImplementation "fi.dy.masa.malilib:malilib-fabric-${project.minecraft_version}:${project.malilib_version}"
    modImplementation 'com.github.sakura-ryoko:malilib:1.21-0.21.3'
}

processResources {
    filesMatching("fabric.mod.json") {
        expand "version": project.version, "mc_version": project.minecraft_version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding("UTF-8")
}
